%% Function generates allFileInd variable to hold matching file indices across three light conditions for each strain,
% so they can be saved and loaded for use later, as this matching step is rather time consuming. 

function allFileInd = generateBlueLightMatchingIndices(extractStamp,strains,windownames,resultsDir)

%% INPUTS: 
% extractStamp: '20210119_073010' feature summaries have multiple bluelight windows.
% strains: cell array containing strain names as strings. % 'N2','CB4856','MY23','QX1410','VX34','NIC58','JU1373';
% windownames: vector listing the names of the windows as generated by
% Tierpsy summariser. Typically [0:8].
% resultsDir: path leading to the directory where the extracted features
% summary files are located. 

%% OUTPUT:
% allFileInd: struct indexable by strain name. allFileInd.strain is a
% n_file by 9 matrix where each column is a time window. 

%% FUNCTION


for strainCtr = 1:numel(strains)
    %% Get strain name
    strain = strains{strainCtr};
    disp(['Getting allFileInd for ' strain  ' ...'])
    
    %% Find file indices (first window) for the specified strain
    windowCtr = 1;
    % load features table
    featureTable = readtable([resultsDir '/fullFeaturesTable_' extractStamp '_window_' num2str(windownames(windowCtr)) '.csv']);
    % get light condition
    light_condition = getLightcondition(featureTable);
    % filter for bluelight files for the specified strain
    fileInd = find(strcmp(featureTable.strain_name,strain) & strcmp(light_condition,'bluelight'));
    n_sample = numel(fileInd);

    %%  Preallocate matrix to hold file indices: n_sample x n_window
    allFileInd.(strain) = NaN(n_sample,9);
    allFileInd.(strain)(:,windowCtr) = fileInd;
    
    %% Get imgstorenames and wellnames for the subsampled first window files
    % (we will use these and bluelight condition to find the same files
    % across all nine windows)
    imgstorenames = featureTable.filename(allFileInd.(strain)(:,windowCtr));
    wellnames = featureTable.well_name(allFileInd.(strain)(:,windowCtr));
    
    %% Find matching bluelight files for the subsequent windows 
    % go through each subsequent window
    for windowCtr = 2:9 
        % get window name as output by Tierpsy
        window = windownames(windowCtr);
        % load features table for that window
        featureTable = readtable([resultsDir '/fullFeaturesTable_' extractStamp '_window_' num2str(window) '.csv']);
        % get light condition
        light_condition = getLightcondition(featureTable);
        % get file indices that match the files chosen for the first window, as the
        % indices are not the same across all nine windows
        for sampleCtr = 1:n_sample
            fileIdx = find(strcmp(featureTable.filename,imgstorenames{sampleCtr}) &...
                strcmp(featureTable.well_name,wellnames{sampleCtr}) &...
                strcmp(light_condition,'bluelight'));
            if ~isempty(fileIdx)
                allFileInd.(strain)(sampleCtr,windowCtr) = fileIdx;
            end
        end
    end

allFileIndWindows = string(windownames);    
save(['matchingFileInd/bluelight_'  extractStamp '.mat'],'allFileInd','allFileIndWindows')

end